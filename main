<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>YouTube Video Viewer</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f9f9f9;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
        }

        .container {
            max-width: 800px;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            width: 100%;
            box-sizing: border-box;
        }

        label {
            font-size: 18px;
            margin-bottom: 10px;
            display: block;
        }

        input {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            margin-bottom: 20px;
            box-sizing: border-box;
        }

        button {
            background-color: #ff0000;
            color: white;
            padding: 10px 20px;
            font-size: 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-bottom: 10px;
        }

        .video-container {
            position: relative;
            width: 100%;
            padding-bottom: 56.25%; /* 16:9 aspect ratio */
            margin-top: 20px;
        }

        iframe {
            position: absolute;
            width: 100%;
            height: 100%;
            border: none;
        }

        .video-details {
            margin-top: 20px;
        }

        h1 {
            font-size: 24px;
            margin-bottom: 10px;
        }

        p {
            font-size: 16px;
            line-height: 1.5;
            color: #555;
        }

        .comments-section {
            margin-top: 20px;
        }

        textarea {
            width: 100%;
            height: 80px;
            padding: 10px;
            font-size: 16px;
            margin-bottom: 10px;
            box-sizing: border-box;
        }

        .comment {
            background-color: #f2f2f2;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 4px;
        }

        /* Add a new style for saved videos */
        .saved-video {
            background-color: #e6f7ff;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 4px;
        }

        /* Style for the search bar */
        .search-bar {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            box-sizing: border-box;
            margin-bottom: 20px;
        }

        /* Style for search results */
        .search-results {
            margin-top: 20px;
        }

        .result-video {
            background-color: #f9f9f9;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 4px;
            cursor: pointer;
        }
    </style>
</head>
<body>

    <div class="container">
        <!-- Search bar added here -->
        <input type="text" id="searchBar" class="search-bar" placeholder="Search for videos">
        <button onclick="searchVideos()">Search</button>

        <!-- Search results section -->
        <div class="search-results" id="searchResults"></div>
        
        <label for="videoId">Enter YouTube Video ID:</label>
        <input type="text" id="videoId" placeholder="Enter video ID">
        <button onclick="embedVideo()">Embed Video</button>

        <div class="video-container" id="videoContainer"></div>

        <div class="video-details" id="videoDetails">
            <h1>Video Title</h1>
            <p>Description goes here...</p>
        </div>

        <div class="comments-section">
            <h2>Comments</h2>
            <textarea id="commentInput" placeholder="Add a comment..."></textarea>
            <button onclick="addComment()">Add Comment</button>
            <div id="comments"></div>
        </div>

        <button onclick="saveWatchedVideo()">Save Watched Video</button>
        <button onclick="viewWatchedVideos()">View Watched Videos</button>
        <div id="watchedVideos"></div>
    <script>
        var apiKey = 'AIzaSyCjS-8uAsUI-BXrKDmfYzQL6zENsEepOJ8'; // Your YouTube API Key

        function embedVideo() {
            var videoId = document.getElementById('videoId').value;
            var videoContainer = document.getElementById('videoContainer');
            var videoDetails = document.getElementById('videoDetails');

            if (videoId) {
                // Clear previous video and comments
                videoContainer.innerHTML = '';
                videoDetails.innerHTML = '';
                document.getElementById('comments').innerHTML = '';

                // Embed new video
                videoContainer.innerHTML = `
                    <iframe width="100%" height="100%" 
                        src="https://www.youtube-nocookie.com/embed/${videoId}" 
                        frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>
                    </iframe>`;

                // Fetch video details (title and description) from YouTube API
                fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${apiKey}`)
                    .then(response => response.json())
                    .then(data => {
                        const videoTitle = data.items[0].snippet.title;
                        const videoDescription = data.items[0].snippet.description;

                        // Display video details
                        videoDetails.innerHTML = `
                            <h1>${videoTitle}</h1>
                            <p>${videoDescription}</p>`;
                        
                        // Save the watched video information to local storage
                        var watchedVideos = JSON.parse(localStorage.getItem('watchedVideos')) || [];
                        watchedVideos.push({ id: videoId, title: videoTitle });
                        localStorage.setItem('watchedVideos', JSON.stringify(watchedVideos));
                    })
                    .catch(error => console.error('Error fetching video details:', error));
            } else {
                alert('Please enter a YouTube video ID');
            }
        }

        function addComment() {
            var commentInput = document.getElementById('commentInput');
            var commentsContainer = document.getElementById('comments');
            var commentText = commentInput.value;

            if (commentText) {
                // Send the comment to the Google Sheets script
                var scriptUrl = 'https://script.google.com/macros/s/AKfycbzzbPEwgPLcQ5lIwejeTmvnYbAJqXJMk9bHjrdJHRA/dev';
                var payload = { comment: commentText };

                fetch(scriptUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(payload),
                })
                .then(response => response.json())
                .then(data => console.log(data))
                .catch(error => console.error('Error sending comment:', error));

                // Display the comment locally
                var commentElement = document.createElement('div');
                commentElement.classList.add('comment');
                commentElement.textContent = commentText;
                commentsContainer.appendChild(commentElement);

                // Clear the comment input
                commentInput.value = '';
            } else {
                alert('Please enter a comment');
            }
        }

        function saveWatchedVideo() {
            var videoId = document.getElementById('videoId').value;
            var watchedVideos = JSON.parse(localStorage.getItem('watchedVideos')) || [];

            if (videoId) {
                // Check if the video is already saved
                var existingVideo = watchedVideos.find(video => video.id === videoId);
                if (!existingVideo) {
                    // Fetch video details (title) from YouTube API
                    fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${apiKey}`)
                        .then(response => response.json())
                        .then(data => {
                            const videoTitle = data.items[0].snippet.title;

                            // Save the watched video information to local storage
                            watchedVideos.push({ id: videoId, title: videoTitle });
                            localStorage.setItem('watchedVideos', JSON.stringify(watchedVideos));

                            // Display confirmation message
                            alert(`"${videoTitle}" has been saved to your watched videos.`);
                        })
                        .catch(error => console.error('Error fetching video details:', error));
                } else {
                    alert('This video is already in your watched videos.');
                }
            } else {
                alert('Please enter a YouTube video ID');
            }
        }

        function viewWatchedVideos() {
            var watchedVideos = JSON.parse(localStorage.getItem('watchedVideos')) || [];
            var watchedVideosContainer = document.getElementById('watchedVideos');
            watchedVideosContainer.innerHTML = '';

            if (watchedVideos.length > 0) {
                watchedVideos.forEach(video => {
                    var videoElement = document.createElement('div');
                    videoElement.classList.add('saved-video');
                    videoElement.textContent = `${video.title} (ID: ${video.id})`;
                    watchedVideosContainer.appendChild(videoElement);
                });
            } else {
                watchedVideosContainer.textContent = 'No watched videos yet.';
            }
        }

        // Function to perform video search
        function searchVideos() {
            var searchQuery = document.getElementById('searchBar').value;

            // Clear previous search results
            document.getElementById('searchResults').innerHTML = '';

            // If the search query is not empty
            if (searchQuery.trim() !== '') {
                // Perform a search using YouTube API
                fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&q=${searchQuery}&type=video&key=${apiKey}`)
                    .then(response => response.json())
                    .then(data => {
                        // Display search results
                        if (data.items.length > 0) {
                            data.items.forEach(item => {
                                var resultElement = document.createElement('div');
                                resultElement.classList.add('result-video');
                                resultElement.textContent = item.snippet.title;
                                resultElement.onclick = function() {
                                    // Embed the selected video
                                    document.getElementById('videoId').value = item.id.videoId;
                                    embedVideo();
                                };
                                document.getElementById('searchResults').appendChild(resultElement);
                            });
                        } else {
                            // No results found
                            var noResultsElement = document.createElement('div');
                            noResultsElement.textContent = 'No results found!';
                            document.getElementById('searchResults').appendChild(noResultsElement);
                        }
                    })
                    .catch(error => console.error('Error fetching search results:', error));
            } else {
                // Empty search query
                alert('Please enter a search query');
            }
        }
    </script>

</body>
</html>
